% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_lexicon.R
\name{read_lexicon}
\alias{read_lexicon}
\title{Read a backslash-coded lexicon file into a tibble}
\usage{
read_lexicon(file, col_names = c("line", "data"), remove = FALSE, ...)
}
\arguments{
\item{file}{either a path to a file, a connection, or literal data}

\item{col_names}{names for line number and data columns (defaults to "line" and "data")}

\item{remove}{Whether tidyr::extract should remove the "data" column}

\item{...}{Further arguments passed to tidyr::extract}
}
\description{
Read a backslash-coded lexicon file into a tibble
}
\examples{
# Demo: Two literal backslash-coded lexemes
read_lexicon("\\\\lx bonjour\\n\\\\de hello\\n\\n\\\\lx au revoir\\n\\\\de goodbye")

# Demo: Extract backslash code and line value from data
read_lexicon("\\\\lx bonjour\\n\\\\de hello\\n\\n\\\\lx au revoir\\n\\\\de goodbye",
             regex = "\\\\\\\\([a-z]+)\\\\s(.*)", into = c("code", "value"))

# More typical usage (where file path to a lexicon is known):
lexicon_file <- system.file("extdata", "mini-french.txt", package = "tidylex")
read_lexicon(file = lexicon_file, regex = "\\\\\\\\([a-z]+)\\\\s(.*)", into = c("code", "value"))
}
